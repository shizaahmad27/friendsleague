version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: friendsleague-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: friendsleague
      POSTGRES_USER: friendsleague
      POSTGRES_PASSWORD: friendsleague_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - friendsleague-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: friendsleague-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - friendsleague-network

  # NestJS Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: friendsleague-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://friendsleague:friendsleague_password@postgres:5432/friendsleague
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 7d
      AWS_ACCESS_KEY_ID: your-aws-access-key
      AWS_SECRET_ACCESS_KEY: your-aws-secret-key
      AWS_REGION: us-east-1
      AWS_S3_BUCKET: friendsleague-uploads
    depends_on:
      - postgres
      - redis
    volumes:
      - ./:/app
      - /app/node_modules
    networks:
      - friendsleague-network

volumes:
  postgres_data:
  redis_data:

networks:
  friendsleague-network:
    driver: bridge
