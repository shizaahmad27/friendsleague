
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  phoneNumber: 'phoneNumber',
  password: 'password',
  avatar: 'avatar',
  inviteCode: 'inviteCode',
  isOnline: 'isOnline',
  lastSeen: 'lastSeen',
  showOnlineStatus: 'showOnlineStatus',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InvitationScalarFieldEnum = {
  id: 'id',
  code: 'code',
  inviterId: 'inviterId',
  inviteeId: 'inviteeId',
  status: 'status',
  expiredAt: 'expiredAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ChatScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ChatParticipantScalarFieldEnum = {
  id: 'id',
  chatId: 'chatId',
  userId: 'userId',
  joinedAt: 'joinedAt',
  lastReadAt: 'lastReadAt',
  readReceiptsEnabled: 'readReceiptsEnabled'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  content: 'content',
  type: 'type',
  senderId: 'senderId',
  chatId: 'chatId',
  mediaUrl: 'mediaUrl',
  replyToId: 'replyToId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MessageReactionScalarFieldEnum = {
  id: 'id',
  messageId: 'messageId',
  userId: 'userId',
  emoji: 'emoji',
  createdAt: 'createdAt'
};

exports.Prisma.MessageReadReceiptScalarFieldEnum = {
  id: 'id',
  messageId: 'messageId',
  userId: 'userId',
  readAt: 'readAt'
};

exports.Prisma.LeagueScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  adminId: 'adminId',
  isPrivate: 'isPrivate',
  inviteCode: 'inviteCode',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LeagueMemberScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  leagueId: 'leagueId',
  points: 'points',
  rank: 'rank',
  joinedAt: 'joinedAt'
};

exports.Prisma.LeagueAdminScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  leagueId: 'leagueId',
  grantedAt: 'grantedAt',
  grantedBy: 'grantedBy'
};

exports.Prisma.LeagueRuleScalarFieldEnum = {
  id: 'id',
  leagueId: 'leagueId',
  title: 'title',
  description: 'description',
  points: 'points',
  category: 'category',
  createdAt: 'createdAt'
};

exports.Prisma.EventScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  leagueId: 'leagueId',
  adminId: 'adminId',
  startDate: 'startDate',
  endDate: 'endDate',
  maxParticipants: 'maxParticipants',
  isPrivate: 'isPrivate',
  inviteCode: 'inviteCode',
  hasScoring: 'hasScoring',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EventParticipantScalarFieldEnum = {
  id: 'id',
  eventId: 'eventId',
  userId: 'userId',
  points: 'points',
  rank: 'rank',
  joinedAt: 'joinedAt'
};

exports.Prisma.EventRuleScalarFieldEnum = {
  id: 'id',
  eventId: 'eventId',
  title: 'title',
  description: 'description',
  points: 'points',
  category: 'category',
  createdAt: 'createdAt'
};

exports.Prisma.EventInvitationScalarFieldEnum = {
  id: 'id',
  eventId: 'eventId',
  code: 'code',
  email: 'email',
  phoneNumber: 'phoneNumber',
  status: 'status',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FriendshipScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  friendId: 'friendId',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserPrivacySettingsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  targetUserId: 'targetUserId',
  hideOnlineStatus: 'hideOnlineStatus',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.ChatType = exports.$Enums.ChatType = {
  DIRECT: 'DIRECT',
  GROUP: 'GROUP'
};

exports.MessageType = exports.$Enums.MessageType = {
  TEXT: 'TEXT',
  IMAGE: 'IMAGE',
  VIDEO: 'VIDEO',
  FILE: 'FILE',
  VOICE: 'VOICE'
};

exports.FriendshipStatus = exports.$Enums.FriendshipStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  BLOCKED: 'BLOCKED'
};

exports.PointCategory = exports.$Enums.PointCategory = {
  WINS: 'WINS',
  PARTICIPATION: 'PARTICIPATION',
  BONUS: 'BONUS',
  PENALTY: 'PENALTY'
};

exports.InvitationStatus = exports.$Enums.InvitationStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  EXPIRED: 'EXPIRED',
  CANCELLED: 'CANCELLED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Invitation: 'Invitation',
  Chat: 'Chat',
  ChatParticipant: 'ChatParticipant',
  Message: 'Message',
  MessageReaction: 'MessageReaction',
  MessageReadReceipt: 'MessageReadReceipt',
  League: 'League',
  LeagueMember: 'LeagueMember',
  LeagueAdmin: 'LeagueAdmin',
  LeagueRule: 'LeagueRule',
  Event: 'Event',
  EventParticipant: 'EventParticipant',
  EventRule: 'EventRule',
  EventInvitation: 'EventInvitation',
  Friendship: 'Friendship',
  UserPrivacySettings: 'UserPrivacySettings'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/shizaahmad/Desktop/Skrivebord - Shizas MacBook Pro/Personlig/Prosjekter/friendsleague/backend/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/shizaahmad/Desktop/Skrivebord - Shizas MacBook Pro/Personlig/Prosjekter/friendsleague/backend/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id                    String                @id @default(cuid())\n  username              String                @unique\n  email                 String?               @unique\n  phoneNumber           String?               @unique\n  password              String\n  avatar                String?\n  inviteCode            String?               @unique\n  isOnline              Boolean               @default(false)\n  lastSeen              DateTime              @default(now())\n  showOnlineStatus      Boolean               @default(true) // Global setting for online status visibility\n  createdAt             DateTime              @default(now())\n  updatedAt             DateTime              @updatedAt\n  chatParticipants      ChatParticipant[]\n  eventParticipants     EventParticipant[]\n  eventAdmins           Event[]               @relation(\"EventAdmin\")\n  friendOf              Friendship[]          @relation(\"FriendOf\")\n  friendships           Friendship[]          @relation(\"UserFriendships\")\n  receivedInvitations   Invitation[]          @relation(\"Invitee\")\n  sentInvitations       Invitation[]          @relation(\"Inviter\")\n  leagueAdminRoles      LeagueAdmin[]\n  leagueMembers         LeagueMember[]\n  leagueAdmins          League[]              @relation(\"LeagueAdmin\")\n  messageReactions      MessageReaction[]\n  messageReadReceipts   MessageReadReceipt[]\n  sentMessages          Message[]             @relation(\"MessageSender\")\n  privacySettings       UserPrivacySettings[] @relation(\"UserPrivacyOwner\")\n  privacySettingsTarget UserPrivacySettings[] @relation(\"UserPrivacyTarget\")\n\n  @@map(\"users\")\n}\n\nmodel Invitation {\n  id        String           @id @default(cuid())\n  code      String           @unique\n  inviterId String\n  inviteeId String?\n  status    FriendshipStatus @default(PENDING)\n  expiredAt DateTime\n  createdAt DateTime         @default(now())\n  updatedAt DateTime         @updatedAt\n  invitee   User?            @relation(\"Invitee\", fields: [inviteeId], references: [id])\n  inviter   User             @relation(\"Inviter\", fields: [inviterId], references: [id])\n\n  @@map(\"invitations\")\n}\n\nmodel Chat {\n  id           String            @id @default(cuid())\n  name         String?\n  type         ChatType          @default(DIRECT)\n  createdAt    DateTime          @default(now())\n  updatedAt    DateTime          @updatedAt\n  participants ChatParticipant[]\n  messages     Message[]\n\n  @@map(\"chats\")\n}\n\nmodel ChatParticipant {\n  id                  String   @id @default(cuid())\n  chatId              String\n  userId              String\n  joinedAt            DateTime @default(now())\n  lastReadAt          DateTime @default(now())\n  readReceiptsEnabled Boolean  @default(true)\n  chat                Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)\n  user                User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([chatId, userId])\n  @@map(\"chat_participants\")\n}\n\nmodel Message {\n  id           String               @id @default(cuid())\n  content      String\n  type         MessageType          @default(TEXT)\n  senderId     String\n  chatId       String\n  mediaUrl     String?\n  replyToId    String?\n  createdAt    DateTime             @default(now())\n  updatedAt    DateTime             @updatedAt\n  reactions    MessageReaction[]\n  readReceipts MessageReadReceipt[]\n  chat         Chat                 @relation(fields: [chatId], references: [id], onDelete: Cascade)\n  replyTo      Message?             @relation(\"MessageReplies\", fields: [replyToId], references: [id])\n  replies      Message[]            @relation(\"MessageReplies\")\n  sender       User                 @relation(\"MessageSender\", fields: [senderId], references: [id], onDelete: Cascade)\n\n  @@map(\"messages\")\n}\n\nmodel MessageReaction {\n  id        String   @id @default(cuid())\n  messageId String\n  userId    String\n  emoji     String\n  createdAt DateTime @default(now())\n  message   Message  @relation(fields: [messageId], references: [id], onDelete: Cascade)\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([messageId, userId, emoji])\n  @@map(\"message_reactions\")\n}\n\nmodel MessageReadReceipt {\n  id        String   @id @default(cuid())\n  messageId String\n  userId    String\n  readAt    DateTime @default(now())\n  message   Message  @relation(fields: [messageId], references: [id], onDelete: Cascade)\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([messageId, userId])\n  @@map(\"message_read_receipts\")\n}\n\nmodel League {\n  id          String         @id @default(cuid())\n  name        String\n  description String?\n  adminId     String\n  isPrivate   Boolean        @default(false)\n  inviteCode  String?        @unique\n  createdAt   DateTime       @default(now())\n  updatedAt   DateTime       @updatedAt\n  events      Event[]\n  admins      LeagueAdmin[]\n  members     LeagueMember[]\n  rules       LeagueRule[]\n  admin       User           @relation(\"LeagueAdmin\", fields: [adminId], references: [id], onDelete: Cascade)\n\n  @@map(\"leagues\")\n}\n\nmodel LeagueMember {\n  id       String   @id @default(cuid())\n  userId   String\n  leagueId String\n  points   Int      @default(0)\n  rank     Int      @default(0)\n  joinedAt DateTime @default(now())\n  league   League   @relation(fields: [leagueId], references: [id], onDelete: Cascade)\n  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, leagueId])\n  @@map(\"league_members\")\n}\n\nmodel LeagueAdmin {\n  id        String   @id @default(cuid())\n  userId    String\n  leagueId  String\n  grantedAt DateTime @default(now())\n  grantedBy String\n  league    League   @relation(fields: [leagueId], references: [id], onDelete: Cascade)\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, leagueId])\n  @@map(\"league_admins\")\n}\n\nmodel LeagueRule {\n  id          String        @id @default(cuid())\n  leagueId    String\n  title       String\n  description String\n  points      Int\n  category    PointCategory @default(WINS)\n  createdAt   DateTime      @default(now())\n  league      League        @relation(fields: [leagueId], references: [id], onDelete: Cascade)\n\n  @@map(\"league_rules\")\n}\n\nmodel Event {\n  id              String             @id @default(cuid())\n  title           String\n  description     String?\n  leagueId        String?\n  adminId         String\n  startDate       DateTime\n  endDate         DateTime\n  maxParticipants Int?\n  isPrivate       Boolean            @default(false)\n  inviteCode      String?            @unique\n  hasScoring      Boolean            @default(true)\n  createdAt       DateTime           @default(now())\n  updatedAt       DateTime           @updatedAt\n  invitations     EventInvitation[]\n  participants    EventParticipant[]\n  rules           EventRule[]\n  admin           User               @relation(\"EventAdmin\", fields: [adminId], references: [id], onDelete: Cascade)\n  league          League?            @relation(fields: [leagueId], references: [id], onDelete: Cascade)\n\n  @@map(\"events\")\n}\n\nmodel EventParticipant {\n  id       String   @id @default(cuid())\n  eventId  String\n  userId   String\n  points   Int      @default(0)\n  rank     Int      @default(0)\n  joinedAt DateTime @default(now())\n  event    Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)\n  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([eventId, userId])\n  @@map(\"event_participants\")\n}\n\nmodel EventRule {\n  id          String        @id @default(cuid())\n  eventId     String\n  title       String\n  description String\n  points      Int\n  category    PointCategory @default(WINS)\n  createdAt   DateTime      @default(now())\n  event       Event         @relation(fields: [eventId], references: [id], onDelete: Cascade)\n\n  @@map(\"event_rules\")\n}\n\nmodel EventInvitation {\n  id          String           @id @default(cuid())\n  eventId     String\n  code        String           @unique\n  email       String?\n  phoneNumber String?\n  status      InvitationStatus @default(PENDING)\n  expiresAt   DateTime\n  createdAt   DateTime         @default(now())\n  updatedAt   DateTime         @updatedAt\n  event       Event            @relation(fields: [eventId], references: [id], onDelete: Cascade)\n\n  @@map(\"event_invitations\")\n}\n\nmodel Friendship {\n  id        String           @id @default(cuid())\n  userId    String\n  friendId  String\n  status    FriendshipStatus @default(PENDING)\n  createdAt DateTime         @default(now())\n  updatedAt DateTime         @updatedAt\n  friend    User             @relation(\"FriendOf\", fields: [friendId], references: [id], onDelete: Cascade)\n  user      User             @relation(\"UserFriendships\", fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, friendId])\n  @@map(\"friendships\")\n}\n\nmodel UserPrivacySettings {\n  id               String   @id @default(cuid())\n  userId           String // User who owns the privacy setting\n  targetUserId     String // User who the setting applies to\n  hideOnlineStatus Boolean  @default(false) // Whether to hide online status from target user\n  createdAt        DateTime @default(now())\n  updatedAt        DateTime @updatedAt\n\n  // Relations\n  user       User @relation(\"UserPrivacyOwner\", fields: [userId], references: [id], onDelete: Cascade)\n  targetUser User @relation(\"UserPrivacyTarget\", fields: [targetUserId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, targetUserId])\n  @@map(\"user_privacy_settings\")\n}\n\n// Enums\n\nenum ChatType {\n  DIRECT\n  GROUP\n}\n\nenum MessageType {\n  TEXT\n  IMAGE\n  VIDEO\n  FILE\n  VOICE\n}\n\nenum FriendshipStatus {\n  PENDING\n  ACCEPTED\n  BLOCKED\n}\n\nenum PointCategory {\n  WINS\n  PARTICIPATION\n  BONUS\n  PENALTY\n}\n\nenum InvitationStatus {\n  PENDING\n  ACCEPTED\n  EXPIRED\n  CANCELLED\n}\n",
  "inlineSchemaHash": "5ea21b8b27bb98060a90205a43213b387b39278dc624f07768fdc18d09e0aae4",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inviteCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isOnline\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastSeen\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"showOnlineStatus\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"chatParticipants\",\"kind\":\"object\",\"type\":\"ChatParticipant\",\"relationName\":\"ChatParticipantToUser\"},{\"name\":\"eventParticipants\",\"kind\":\"object\",\"type\":\"EventParticipant\",\"relationName\":\"EventParticipantToUser\"},{\"name\":\"eventAdmins\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventAdmin\"},{\"name\":\"friendOf\",\"kind\":\"object\",\"type\":\"Friendship\",\"relationName\":\"FriendOf\"},{\"name\":\"friendships\",\"kind\":\"object\",\"type\":\"Friendship\",\"relationName\":\"UserFriendships\"},{\"name\":\"receivedInvitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"Invitee\"},{\"name\":\"sentInvitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"Inviter\"},{\"name\":\"leagueAdminRoles\",\"kind\":\"object\",\"type\":\"LeagueAdmin\",\"relationName\":\"LeagueAdminToUser\"},{\"name\":\"leagueMembers\",\"kind\":\"object\",\"type\":\"LeagueMember\",\"relationName\":\"LeagueMemberToUser\"},{\"name\":\"leagueAdmins\",\"kind\":\"object\",\"type\":\"League\",\"relationName\":\"LeagueAdmin\"},{\"name\":\"messageReactions\",\"kind\":\"object\",\"type\":\"MessageReaction\",\"relationName\":\"MessageReactionToUser\"},{\"name\":\"messageReadReceipts\",\"kind\":\"object\",\"type\":\"MessageReadReceipt\",\"relationName\":\"MessageReadReceiptToUser\"},{\"name\":\"sentMessages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageSender\"},{\"name\":\"privacySettings\",\"kind\":\"object\",\"type\":\"UserPrivacySettings\",\"relationName\":\"UserPrivacyOwner\"},{\"name\":\"privacySettingsTarget\",\"kind\":\"object\",\"type\":\"UserPrivacySettings\",\"relationName\":\"UserPrivacyTarget\"}],\"dbName\":\"users\"},\"Invitation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inviterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inviteeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"FriendshipStatus\"},{\"name\":\"expiredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"invitee\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Invitee\"},{\"name\":\"inviter\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Inviter\"}],\"dbName\":\"invitations\"},\"Chat\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ChatType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"participants\",\"kind\":\"object\",\"type\":\"ChatParticipant\",\"relationName\":\"ChatToChatParticipant\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ChatToMessage\"}],\"dbName\":\"chats\"},\"ChatParticipant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chatId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastReadAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"readReceiptsEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"chat\",\"kind\":\"object\",\"type\":\"Chat\",\"relationName\":\"ChatToChatParticipant\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ChatParticipantToUser\"}],\"dbName\":\"chat_participants\"},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"MessageType\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chatId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mediaUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"replyToId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reactions\",\"kind\":\"object\",\"type\":\"MessageReaction\",\"relationName\":\"MessageToMessageReaction\"},{\"name\":\"readReceipts\",\"kind\":\"object\",\"type\":\"MessageReadReceipt\",\"relationName\":\"MessageToMessageReadReceipt\"},{\"name\":\"chat\",\"kind\":\"object\",\"type\":\"Chat\",\"relationName\":\"ChatToMessage\"},{\"name\":\"replyTo\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageReplies\"},{\"name\":\"replies\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageReplies\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MessageSender\"}],\"dbName\":\"messages\"},\"MessageReaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emoji\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"message\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageToMessageReaction\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MessageReactionToUser\"}],\"dbName\":\"message_reactions\"},\"MessageReadReceipt\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"message\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageToMessageReadReceipt\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MessageReadReceiptToUser\"}],\"dbName\":\"message_read_receipts\"},\"League\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPrivate\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"inviteCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"events\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToLeague\"},{\"name\":\"admins\",\"kind\":\"object\",\"type\":\"LeagueAdmin\",\"relationName\":\"LeagueToLeagueAdmin\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"LeagueMember\",\"relationName\":\"LeagueToLeagueMember\"},{\"name\":\"rules\",\"kind\":\"object\",\"type\":\"LeagueRule\",\"relationName\":\"LeagueToLeagueRule\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LeagueAdmin\"}],\"dbName\":\"leagues\"},\"LeagueMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"leagueId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"points\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rank\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"league\",\"kind\":\"object\",\"type\":\"League\",\"relationName\":\"LeagueToLeagueMember\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LeagueMemberToUser\"}],\"dbName\":\"league_members\"},\"LeagueAdmin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"leagueId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grantedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"grantedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"league\",\"kind\":\"object\",\"type\":\"League\",\"relationName\":\"LeagueToLeagueAdmin\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LeagueAdminToUser\"}],\"dbName\":\"league_admins\"},\"LeagueRule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"leagueId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"points\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"PointCategory\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"league\",\"kind\":\"object\",\"type\":\"League\",\"relationName\":\"LeagueToLeagueRule\"}],\"dbName\":\"league_rules\"},\"Event\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"leagueId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"maxParticipants\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isPrivate\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"inviteCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hasScoring\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"EventInvitation\",\"relationName\":\"EventToEventInvitation\"},{\"name\":\"participants\",\"kind\":\"object\",\"type\":\"EventParticipant\",\"relationName\":\"EventToEventParticipant\"},{\"name\":\"rules\",\"kind\":\"object\",\"type\":\"EventRule\",\"relationName\":\"EventToEventRule\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EventAdmin\"},{\"name\":\"league\",\"kind\":\"object\",\"type\":\"League\",\"relationName\":\"EventToLeague\"}],\"dbName\":\"events\"},\"EventParticipant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"points\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rank\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToEventParticipant\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EventParticipantToUser\"}],\"dbName\":\"event_participants\"},\"EventRule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"points\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"PointCategory\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToEventRule\"}],\"dbName\":\"event_rules\"},\"EventInvitation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"InvitationStatus\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToEventInvitation\"}],\"dbName\":\"event_invitations\"},\"Friendship\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"friendId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"FriendshipStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"friend\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FriendOf\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserFriendships\"}],\"dbName\":\"friendships\"},\"UserPrivacySettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hideOnlineStatus\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserPrivacyOwner\"},{\"name\":\"targetUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserPrivacyTarget\"}],\"dbName\":\"user_privacy_settings\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

